[{"/Users/admin/Documents/GitHub/QR-Site/src/index.js":"1","/Users/admin/Documents/GitHub/QR-Site/src/components/Home/HomeComponent.js":"2","/Users/admin/Documents/GitHub/QR-Site/src/components/SignIn/SignInComponent.js":"3","/Users/admin/Documents/GitHub/QR-Site/src/functions/config/index.js":"4","/Users/admin/Documents/GitHub/QR-Site/src/components/MedList/MedListComponent.js":"5","/Users/admin/Documents/GitHub/QR-Site/src/components/User/TrackedPtComponent.js":"6","/Users/admin/Documents/GitHub/QR-Site/src/components/MedListQR/MedListQRComponent.js":"7"},{"size":972,"mtime":1612398364040,"results":"8","hashOfConfig":"9"},{"size":831,"mtime":1612398364032,"results":"10","hashOfConfig":"9"},{"size":5489,"mtime":1612398364034,"results":"11","hashOfConfig":"9"},{"size":751,"mtime":1612398364039,"results":"12","hashOfConfig":"9"},{"size":5993,"mtime":1612398364033,"results":"13","hashOfConfig":"9"},{"size":2338,"mtime":1612486180327,"results":"14","hashOfConfig":"9"},{"size":7078,"mtime":1612487459695,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"1a29mrq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/admin/Documents/GitHub/QR-Site/src/index.js",["32","33"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers/rootReducer';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './configureStore.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/admin/Documents/GitHub/QR-Site/src/components/Home/HomeComponent.js",["34"],"/Users/admin/Documents/GitHub/QR-Site/src/components/SignIn/SignInComponent.js",["35","36","37","38","39","40","41"],"/Users/admin/Documents/GitHub/QR-Site/src/functions/config/index.js",[],"/Users/admin/Documents/GitHub/QR-Site/src/components/MedList/MedListComponent.js",[],["42","43"],"/Users/admin/Documents/GitHub/QR-Site/src/components/User/TrackedPtComponent.js",[],"/Users/admin/Documents/GitHub/QR-Site/src/components/MedListQR/MedListQRComponent.js",["44","45"],{"ruleId":"46","severity":1,"message":"47","line":8,"column":10,"nodeType":"48","messageId":"49","endLine":8,"endColumn":21},{"ruleId":"46","severity":1,"message":"50","line":9,"column":8,"nodeType":"48","messageId":"49","endLine":9,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":14,"column":8,"nodeType":"53","endLine":14,"endColumn":10,"suggestions":"54"},{"ruleId":"46","severity":1,"message":"55","line":17,"column":11,"nodeType":"48","messageId":"49","endLine":17,"endColumn":15},{"ruleId":"46","severity":1,"message":"56","line":18,"column":11,"nodeType":"48","messageId":"49","endLine":18,"endColumn":16},{"ruleId":"46","severity":1,"message":"57","line":20,"column":11,"nodeType":"48","messageId":"49","endLine":20,"endColumn":24},{"ruleId":"46","severity":1,"message":"58","line":21,"column":11,"nodeType":"48","messageId":"49","endLine":21,"endColumn":23},{"ruleId":"46","severity":1,"message":"59","line":49,"column":11,"nodeType":"48","messageId":"49","endLine":49,"endColumn":23},{"ruleId":"51","severity":1,"message":"60","line":59,"column":8,"nodeType":"53","endLine":59,"endColumn":18,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":87,"column":133,"nodeType":"64","endLine":87,"endColumn":168},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"51","severity":1,"message":"69","line":26,"column":16,"nodeType":"70","endLine":38,"endColumn":6},{"ruleId":"51","severity":1,"message":"71","line":38,"column":8,"nodeType":"53","endLine":38,"endColumn":10,"suggestions":"72"},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'rootReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'user' is assigned a value but never used.","'count' is assigned a value but never used.","'viewUserEmail' is assigned a value but never used.","'viewUserAuth' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["74"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'id', 'isLogged', 'meds', and 'token'. Either include them or remove the dependency array.",["77"],{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [state]",{"range":"84","text":"85"},"Update the dependencies array to be: [history, isLogged]",{"range":"86","text":"87"},"Update the dependencies array to be: [dispatch, history, id, isLogged, meds, token]",{"range":"88","text":"89"},[478,480],"[state]",[1955,1965],"[history, isLogged]",[1311,1313],"[dispatch, history, id, isLogged, meds, token]"]