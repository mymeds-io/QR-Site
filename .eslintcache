[{"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Tracked\\TrackedComponent.js":"1","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\index.js":"2","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedList\\MedListComponent.js":"3","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedListQR\\MedListQRComponent.js":"4","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Home\\HomeComponent.js":"5","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\SignUp\\SignUpComponent.js":"6","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\functions\\useFetchMedsQR.js":"7","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\App.js":"8","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\User\\TrackedPtComponent.js":"9","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\NavBar\\NavBarComponent.js":"10","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\configureStore.js":"11","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\TrackedUsers\\TrackedUsersComponent.js":"12"},{"size":387,"mtime":1610612501149,"results":"13","hashOfConfig":"14"},{"size":1003,"mtime":1610787949142,"results":"15","hashOfConfig":"14"},{"size":6119,"mtime":1610995709001,"results":"16","hashOfConfig":"14"},{"size":6994,"mtime":1611560400643,"results":"17","hashOfConfig":"14"},{"size":860,"mtime":1611653224060,"results":"18","hashOfConfig":"14"},{"size":10466,"mtime":1611557110747,"results":"19","hashOfConfig":"14"},{"size":1541,"mtime":1611557755168,"results":"20","hashOfConfig":"14"},{"size":1023,"mtime":1611557846602,"results":"21","hashOfConfig":"14"},{"size":2325,"mtime":1611558818665,"results":"22","hashOfConfig":"14"},{"size":3691,"mtime":1611562216385,"results":"23","hashOfConfig":"14"},{"size":476,"mtime":1610787949252,"results":"24","hashOfConfig":"14"},{"size":2927,"mtime":1611610258459,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yuo9ij",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Tracked\\TrackedComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\index.js",["55","56"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { store, persistor } from './configureStore.js'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["57","58"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedList\\MedListComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedListQR\\MedListQRComponent.js",["59","60"],"import React, { useEffect } from 'react';\r\nimport NavBarComponent from '../NavBar/NavBarComponent';\r\nimport './medList.css';\r\nimport SkeletonProfile from '../Skeletons/SkeletonProfile';\r\nimport SkeletonArticle from '../Skeletons/SkeletonArticle';\r\nimport {useParams} from \"react-router-dom\";\r\nimport useFetchMedsQR from '../../functions/useFetchMedsQR';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function MedListQRComponent() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    const viewUserId = useSelector(state => state.viewUserId)\r\n    const isLogged = useSelector(state => state.isLogged)\r\n\r\n    let { id, fName, lName, token } = useParams();\r\n    \r\n    const {meds, loading, error} = useFetchMedsQR( id, viewUserId )\r\n\r\n    const age = 31\r\n    const name = `${fName} ${lName}`\r\n\r\n    useEffect( async () => {\r\n\r\n        if(!isLogged){\r\n            await dispatch({ type: \"ADD_PT\", payload: {ptId: id, ptToken: token } })\r\n            alert(\"You need to be signed in to see this patient's medications\")\r\n            history.push('/')\r\n        }\r\n\r\n        if(meds && meds.length > 0){\r\n            console.log(\"Here are the pt's meds: \", meds);\r\n        }\r\n\r\n    }, [])\r\n\r\n    let dummyImage = \"https://www.meijer.com/content/dam/meijer/product/0030/04/5044/90/0030045044905_2_A1C1_0600.png\"\r\n    \r\n\r\n    const renderMeds = () => {\r\n        if(meds){\r\n            return meds.map((med) => {\r\n                return (\r\n                <div className=\"row no-gutters medsRow justify-content-center mt-3\">\r\n                    <div className=\"col-1\" style={{position:\"relative\", right:\"1vw\"}}>\r\n                        <img className=\"img-fluid\" src={dummyImage} alt=\"medPic\"/>\r\n                    </div>\r\n                    <div className=\"col-8\" style={{position:\"relative\", left:\"1vw\", top:\"1vh\"}}>\r\n                        <div className=\"row no-gutters\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"medName\">{med.name}</div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"medDirections\">{med.notes}</div>\r\n                            </div>\r\n                            <div className=\"col-5\" style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                                <div className=\"medRefill\" style={{position:\"relative\", right:\"1vw\"}}><i className=\"fa fa-share\" style={{fontWeight:\"700\"}} aria-hidden=\"true\">{\"11/30/24\"}</i></div>\r\n                            </div>\r\n                            <div className=\"col-5\" style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                                <div className=\"medExp\" style={{position:\"relative\", right:\"10%\"}}><i className=\"fa fa-ban\" style={{fontWeight:\"700\"}} aria-hidden=\"true\">{\"12/31/25\"}</i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderName = () => {\r\n        if(name){\r\n            return <h5>{name}</h5>\r\n        }\r\n    }\r\n\r\n    const renderAge = () => {\r\n        if(age){\r\n            return <h6 className=\"userAge\" >{age + \" Years Old\"}</h6>\r\n        }\r\n    }\r\n\r\n    \r\n    let btns = document.getElementsByClassName(\"medHx\");\r\n\r\n    for( let i = 0; i < btns.length; i++){\r\n        btns[i].addEventListener(\"click\", function() {\r\n            let current = document.getElementsByClassName(\"active\");\r\n            current[0].className = current[0].className.replace(\" active\", \"\");\r\n            this.className += \" active\";\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        \r\n        <div className=\"medListComponent\">\r\n            <NavBarComponent />\r\n            <div className=\"medListContent\">\r\n                <div className=\"row no-gutters justify-content-center\" style={{transform: (!loading ? \"translateY(15%)\" : \"translateY(5%)\")}}>\r\n                    <div className=\"col-9 col-md-4 col-lg-4\">\r\n                        <div className=\"medListContainer\">\r\n                            {!loading ? \r\n                            <img src=\"https://avatars2.githubusercontent.com/u/49351487?s=460&u=a49783af1f3ab38550aae809c9cc4ecdaa432c7c&v=4\" alt=\"userPic\" className=\"userImg img-fluid\"/>    \r\n                            : \r\n                            <SkeletonProfile theme=\"light\" />}\r\n\r\n                            <div className=\"medListContainerContent\">\r\n                                {!loading && \r\n                                \r\n                                <div>\r\n                                    <div className=\"row no-gutters userNameRow\">\r\n                                        <div className=\"col-4\" style={{position:\"relative\", left:\"5%\"}}>\r\n                                            {renderName()}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters\">\r\n                                        <div className=\"col-3\" style={{position:\"relative\", left:\"6%\"}}>\r\n                                            {renderAge()}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                }\r\n                                <div className=\"row no-gutters justify-content-center\">\r\n                                    <div className=\"col-5\">\r\n                                        <div className=\"medHx medHistoryContainer active\">\r\n                                            <div className=\"medHxOverlay\"></div>\r\n                                            <span style={{textAlign:\"center\", fontSize:\".9rem\"}}>Medicine Tracking List</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-5\">\r\n                                        <div className=\"medHx medHistoryContainer2\">\r\n                                            <div className=\"medHxOverlay2\"></div>\r\n                                            <span>History</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={!loading ? \"userMedContainer\" : \"userMedContainer-loading\"} >\r\n                                    {!loading ? renderMeds() : [1,2].map((n) => <SkeletonArticle key={n} theme=\"light\"/>)}\r\n                                    {error && <div className=\"center\">You have no meds to display. ID: {id} Type: {token} </div>}                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Home\\HomeComponent.js",["61"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\SignUp\\SignUpComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\functions\\useFetchMedsQR.js",["62"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\App.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\User\\TrackedPtComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\NavBar\\NavBarComponent.js",["63","64","65"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\configureStore.js",["66","67"],"import { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore } from 'redux-persist'\r\nimport logger from 'redux-logger'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport rootReducer from './reducers/rootReducer'\r\n \r\n \r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };",["68","69"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\TrackedUsers\\TrackedUsersComponent.js",["70","71","72","73","74","75","76"],{"ruleId":"77","severity":1,"message":"78","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":21},{"ruleId":"77","severity":1,"message":"81","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":19},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":26,"column":16,"nodeType":"88","endLine":38,"endColumn":6},{"ruleId":"86","severity":1,"message":"89","line":38,"column":8,"nodeType":"90","endLine":38,"endColumn":10,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"92","line":14,"column":8,"nodeType":"90","endLine":14,"endColumn":10,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":49,"column":8,"nodeType":"90","endLine":49,"endColumn":10,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":67,"column":25,"nodeType":"98","endLine":67,"endColumn":58},{"ruleId":"96","severity":1,"message":"97","line":68,"column":25,"nodeType":"98","endLine":68,"endColumn":58},{"ruleId":"96","severity":1,"message":"97","line":69,"column":25,"nodeType":"98","endLine":69,"endColumn":58},{"ruleId":"77","severity":1,"message":"99","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":14,"column":1,"nodeType":"102","endLine":14,"endColumn":37},{"ruleId":"82","replacedBy":"103"},{"ruleId":"84","replacedBy":"104"},{"ruleId":"77","severity":1,"message":"105","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":24},{"ruleId":"77","severity":1,"message":"106","line":14,"column":12,"nodeType":"79","messageId":"80","endLine":14,"endColumn":18},{"ruleId":"77","severity":1,"message":"107","line":14,"column":20,"nodeType":"79","messageId":"80","endLine":14,"endColumn":29},{"ruleId":"77","severity":1,"message":"108","line":15,"column":18,"nodeType":"79","messageId":"80","endLine":15,"endColumn":25},{"ruleId":"77","severity":1,"message":"109","line":15,"column":27,"nodeType":"79","messageId":"80","endLine":15,"endColumn":32},{"ruleId":"77","severity":1,"message":"110","line":18,"column":11,"nodeType":"79","messageId":"80","endLine":18,"endColumn":24},{"ruleId":"77","severity":1,"message":"111","line":20,"column":11,"nodeType":"79","messageId":"80","endLine":20,"endColumn":23},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'rootReducer' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'id', 'isLogged', 'meds', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["116"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'storage' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["112"],["113"],"'LoadingComponent' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'viewUserEmail' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [dispatch, history, id, isLogged, meds, token]",{"range":"123","text":"124"},"Update the dependencies array to be: [state]",{"range":"125","text":"126"},"Update the dependencies array to be: [config]",{"range":"127","text":"128"},[1283,1285],"[dispatch, history, id, isLogged, meds, token]",[491,493],"[state]",[1514,1516],"[config]"]