[{"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Tracked\\TrackedComponent.js":"1","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\index.js":"2","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedList\\MedListComponent.js":"3","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedListQR\\MedListQRComponent.js":"4","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Home\\HomeComponent.js":"5","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\SignUp\\SignUpComponent.js":"6","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\functions\\useFetchMedsQR.js":"7","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\App.js":"8","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\User\\TrackedPtComponent.js":"9","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\NavBar\\NavBarComponent.js":"10"},{"size":387,"mtime":1610612501149,"results":"11","hashOfConfig":"12"},{"size":1003,"mtime":1610787949142,"results":"13","hashOfConfig":"12"},{"size":6119,"mtime":1610995709001,"results":"14","hashOfConfig":"12"},{"size":6994,"mtime":1611560400643,"results":"15","hashOfConfig":"12"},{"size":566,"mtime":1610998371556,"results":"16","hashOfConfig":"12"},{"size":10466,"mtime":1611557110747,"results":"17","hashOfConfig":"12"},{"size":1541,"mtime":1611557755168,"results":"18","hashOfConfig":"12"},{"size":1023,"mtime":1611557846602,"results":"19","hashOfConfig":"12"},{"size":2325,"mtime":1611558818665,"results":"20","hashOfConfig":"12"},{"size":3691,"mtime":1611562216385,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yuo9ij",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Tracked\\TrackedComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\index.js",["43","44"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { store, persistor } from './configureStore.js'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedList\\MedListComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\MedListQR\\MedListQRComponent.js",["45","46"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\Home\\HomeComponent.js",["47"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\SignUp\\SignUpComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\functions\\useFetchMedsQR.js",["48"],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\App.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\User\\TrackedPtComponent.js",[],"C:\\Users\\gregr\\Desktop\\my-meds-site\\src\\components\\NavBar\\NavBarComponent.js",["49","50","51"],{"ruleId":"52","severity":1,"message":"53","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":21},{"ruleId":"52","severity":1,"message":"56","line":9,"column":8,"nodeType":"54","messageId":"55","endLine":9,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":26,"column":16,"nodeType":"59","endLine":38,"endColumn":6},{"ruleId":"57","severity":1,"message":"60","line":38,"column":8,"nodeType":"61","endLine":38,"endColumn":10,"suggestions":"62"},{"ruleId":"57","severity":1,"message":"63","line":12,"column":8,"nodeType":"61","endLine":12,"endColumn":10,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"65","line":49,"column":8,"nodeType":"61","endLine":49,"endColumn":10,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":67,"column":25,"nodeType":"69","endLine":67,"endColumn":58},{"ruleId":"67","severity":1,"message":"68","line":68,"column":25,"nodeType":"69","endLine":68,"endColumn":58},{"ruleId":"67","severity":1,"message":"68","line":69,"column":25,"nodeType":"69","endLine":69,"endColumn":58},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'rootReducer' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'id', 'isLogged', 'meds', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["70"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["71"],"React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["72"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [dispatch, history, id, isLogged, meds, token]",{"range":"79","text":"80"},"Update the dependencies array to be: [state]",{"range":"81","text":"82"},"Update the dependencies array to be: [config]",{"range":"83","text":"84"},[1283,1285],"[dispatch, history, id, isLogged, meds, token]",[381,383],"[state]",[1514,1516],"[config]"]